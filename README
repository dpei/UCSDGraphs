/-------------------------------------------------------------------------
/ Finished Code and GUI Application for Course 3 in the
/ Java Programming: Object Oriented Design of 
/ Data Structures Specialization:
/
/ Advanced Data Structures in Java
/ https://www.coursera.org/learn/advanced-data-structures
/
/ Authored by UCSD MOOC Team:
/ Mia Minnes, Christine Alvarado, Leo Porter, Alec Brickner
/ and Adam Setters
/ Date: 12/16/2015
/ Modified by Dong Pei.
/ Modified on June 2017
/
/ 
/

--------------------------------------------------------[ Whatâ€™s done by Dong]-

1. Implemented bfs (unweighted), dijkstra (weighted) and A* (weighted) algorithm 
in roadmap/MapGraph.java for route-finding problems in a map. (basicgraph.Graph.java
basicgraph.GraphAdjList.java and basicgraph.GraphAdjMatrix.java)

2. Added additional classes (MyVertice.java and MyEdge.java) to help implementation. 

3. Generated JUnit test cases for each algorithm.

4. Implement methods to represent a graph with both Adjacency list and Adjacency matrix.
Compared efficiency between two data structures.




---------------------------------------------------------[ DESCRIPTION ]--

The starter files provided skeleton code, as well as grading previews and 
testing files to be used in completing the course programming 
assignments.
The author that modified code provided solution 
and finished implementations in each week.

-------------------------------------------------------[ FILES BY WEEK ]--

Below are the files introduced in each week and used in each week
of the course. See file for description...

Week 1 : Introduction to the course and graphs
==============================================
basicgraph.Graph.java
basicgraph.GraphAdjList.java
basicgraph.GraphAdjMatrix.java

Week 2 : Class design and simple graph search
==================================================
roadgraph.MapGraph.java
week2example.Maze.java
week2example.MazeLoader.java
week2example.MazeNode.java

Utility files
=============
geography.GeographicPoint.java
geography.RoadSegment.java
util.GraphLoader.java
